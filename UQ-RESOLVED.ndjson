{"task":"Quantify numerical error in determinant evaluation for G({x_e})","priority":"Medium","python_snippet":"import numpy as np\nfrom project.generating_functional import generate_K, compute_determinant\nxs = np.linspace(-0.9, 0.9, 100)\nerrors = []\nfor x in xs:\n    K = generate_K([x, x])  # example 6-j config\n    det1 = compute_determinant(K)\n    det2 = compute_determinant(K.astype(np.float64))\n    errors.append(abs(det1 - det2))\nassert max(errors) < 1e-10"}
{"task":"Perform local sensitivity analysis of 3nj symbol under rational perturbations of input spins","priority":"High","python_snippet":"import sympy as sp\nfrom project.su2_3nj import generate_3nj\nbase = generate_3nj(1, 2, 3, 4, 5, 6)\neps = sp.Rational(1, 1000)\ndelta = generate_3nj(1, 2+eps, 3, 4, 5, 6) - base\nassert delta.expand().as_ordered_terms()[0].as_coeff_exponent(eps)[0] != 0"}